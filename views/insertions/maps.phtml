<?php
Core::load('Templates.HTML.Helpers.Maps');

$type = 'yandex';
$map_id = uniqid('map');
$width = 300;
$height = 300;
$border = false;
$padding = 0;
$margin = 0;
$style = false;

$options = array(
	'properties' => array(
		'center' => array(
			'x' => false,
			'y' => false,
		),
	),
	'markers' => array(),
	'windows' => array(),
);


foreach ($args_array as $arg) {

	$arg = strtolower(trim($arg));

	if ($arg == 'yandex' || $arg == 'google') {
		$type = $arg;
	}

	elseif ($arg == 'roads' || $arg == 'satellite' || $arg == 'hybrid') {
		$options['properties']['type'] = $arg;
	}

	elseif ($m = Core_Regexps::match_with_results('{^(\d+)x(\d+)$}', $arg)) {
		$width = $m[1];
		$height = $m[2];
	}

	elseif ($m = Core_Regexps::match_with_results('{^(border|margin|padding):(.+)$}', $arg)) {
		$s = $m[1];
		$$s = trim($m[2]);
	}

	elseif (is_numeric($arg)) {
		if (!$options['properties']['center']['x']) {
			$options['properties']['center']['x'] = $arg;
		} elseif (!$options['properties']['center']['y']) {
			$options['properties']['center']['y'] = $arg;
		} else {
			$options['properties']['zoom'] = $arg;
		}
	}

	elseif (CMS::vars()->exists($arg)) {
		$o = CMS::vars()->get($arg);
		if (is_array($o)) {
			$options = array_replace_recursive($options, $o);
		}
	}

	else {
		$map_id = $arg;
	}
}

if (!isset($options['properties']['style'])) {
	if (!$style) {
		$style = '';
		$style .= "width: {$width}px;";
		$style .= "height: {$height}px;";
		if ($border) $style .= "border: {$border};";
		if ($margin) $style .= "margin: {$margin};";
		if ($padding) $style .= "padding: {$padding};";
	}
	$options['properties']['style'] = $style;
}

print $this->maps->map($type, $map_id, md5(serialize($options)), $options);
